Traceback (most recent call last):
  File "/Users/carol/opt/miniconda3/envs/phys-web/lib/python3.8/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/Users/carol/opt/miniconda3/envs/phys-web/lib/python3.8/site-packages/nbclient/client.py", line 1087, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/Users/carol/opt/miniconda3/envs/phys-web/lib/python3.8/site-packages/nbclient/util.py", line 74, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/Users/carol/opt/miniconda3/envs/phys-web/lib/python3.8/site-packages/nbclient/util.py", line 53, in just_run
    return loop.run_until_complete(coro)
  File "/Users/carol/opt/miniconda3/envs/phys-web/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/Users/carol/opt/miniconda3/envs/phys-web/lib/python3.8/site-packages/nbclient/client.py", line 540, in async_execute
    await self.async_execute_cell(
  File "/Users/carol/opt/miniconda3/envs/phys-web/lib/python3.8/site-packages/nbclient/client.py", line 832, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/Users/carol/opt/miniconda3/envs/phys-web/lib/python3.8/site-packages/nbclient/client.py", line 740, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply['content'])
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import altair as alt
import pandas as pd
import numpy as np

data = pd.read_csv('./lab2.csv', delimiter=',').rename(columns={'Number of Anti_nodes': 'n', 'f (Hz)': 'f','f error (Hz)': 'f_error'})

chart = alt.Chart(data, height=300, width=300).mark_circle(
    color='teal', 
    size = 70, 
    opacity=0.6,
).encode(
    x=alt.X('n:Q', title='Number of antinodes',scale=alt.Scale(domain=(0, 7))),
    y=alt.Y('f:Q', title='Frequency (Hz)',scale=alt.Scale(domain=(0, 100)))
).properties(
    title='Frequency vs Number of antinodes'
)

# Generate regression line
linear_fit=chart.transform_regression('n', 'f', method='linear').mark_line(color="red",strokeDash=np.array([3,3]))

# # generate the error bars
errorbars = chart.mark_errorbar(extent='stderr').encode(
    x=alt.X('x:Q'),
    yError=alt.YError(field='f_error:Q')
)

# Display the chart
alt.layer(chart,linear_fit, errorbars)
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mModuleNotFoundError[0m                       Traceback (most recent call last)
[0;32m<ipython-input-1-802d156bab72>[0m in [0;36m<module>[0;34m[0m
[0;32m----> 1[0;31m [0;32mimport[0m [0maltair[0m [0;32mas[0m [0malt[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m      2[0m [0;32mimport[0m [0mpandas[0m [0;32mas[0m [0mpd[0m[0;34m[0m[0;34m[0m[0m
[1;32m      3[0m [0;32mimport[0m [0mnumpy[0m [0;32mas[0m [0mnp[0m[0;34m[0m[0;34m[0m[0m
[1;32m      4[0m [0;34m[0m[0m
[1;32m      5[0m [0mdata[0m [0;34m=[0m [0mpd[0m[0;34m.[0m[0mread_csv[0m[0;34m([0m[0;34m'./lab2.csv'[0m[0;34m,[0m [0mdelimiter[0m[0;34m=[0m[0;34m','[0m[0;34m)[0m[0;34m.[0m[0mrename[0m[0;34m([0m[0mcolumns[0m[0;34m=[0m[0;34m{[0m[0;34m'Number of Anti_nodes'[0m[0;34m:[0m [0;34m'n'[0m[0;34m,[0m [0;34m'f (Hz)'[0m[0;34m:[0m [0;34m'f'[0m[0;34m,[0m[0;34m'f error (Hz)'[0m[0;34m:[0m [0;34m'f_error'[0m[0;34m}[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;31mModuleNotFoundError[0m: No module named 'altair'
ModuleNotFoundError: No module named 'altair'

